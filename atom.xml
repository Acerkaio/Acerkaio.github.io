<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>AcerkaioBlog</title>
  
  <subtitle>521478963</subtitle>
  <link href="https://blog.acerkaio.top/atom.xml" rel="self"/>
  
  <link href="https://blog.acerkaio.top/"/>
  <updated>2024-09-19T09:56:21.257Z</updated>
  <id>https://blog.acerkaio.top/</id>
  
  <author>
    <name>Acerkaio</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vercel 后端上手</title>
    <link href="https://blog.acerkaio.top/2024/09/19/Vercel-%E5%90%8E%E7%AB%AF%E4%B8%8A%E6%89%8B/"/>
    <id>https://blog.acerkaio.top/2024/09/19/Vercel-%E5%90%8E%E7%AB%AF%E4%B8%8A%E6%89%8B/</id>
    <published>2024-09-19T09:40:40.000Z</published>
    <updated>2024-09-19T09:56:21.257Z</updated>
    
    <content type="html"><![CDATA[<p>热知识: Vercel 支持后端，可以使用 Flask 语法 （</p><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作:"></a>准备工作:</h2><ul><li><p>Flask</p></li><li><p>一个自己的域名</p></li><li><p>一个 Vercel 账号，并且绑定 Github</p></li></ul><h2 id="新建文件夹"><a href="#新建文件夹" class="headerlink" title="新建文件夹"></a>新建文件夹</h2><p>将文件夹放入以下文件:</p><ul><li><p>requirements.txt</p></li><li><p>vercel.json</p></li><li><p>index.py</p></li></ul><p><code>requirements.txt</code>:</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Flask</span><br><span class="line">requests</span><br><span class="line">pyjson</span><br><span class="line">pyrandom</span><br></pre></td></tr></table></figure><p>告诉 Vercel 要引入的库，如果要引入其它库请自行搜索。</p><p><code>vercel.json</code></p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="punctuation">&#123;</span></span><br><span class="line">  <span class="attr">&quot;builds&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;./index.py&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;use&quot;</span><span class="punctuation">:</span> <span class="string">&quot;@vercel/python&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span><span class="punctuation">,</span></span><br><span class="line">  <span class="attr">&quot;routes&quot;</span><span class="punctuation">:</span> <span class="punctuation">[</span></span><br><span class="line">    <span class="punctuation">&#123;</span></span><br><span class="line">      <span class="attr">&quot;src&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/(.*)&quot;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;headers&quot;</span><span class="punctuation">:</span> <span class="punctuation">&#123;</span></span><br><span class="line">        <span class="attr">&quot;cache-control&quot;</span><span class="punctuation">:</span> <span class="string">&quot;no-cache, no-store, must-revalidate&quot;</span><span class="punctuation">,</span></span><br><span class="line">        <span class="attr">&quot;Access-Control-Allow-Origin&quot;</span><span class="punctuation">:</span> <span class="string">&quot;*&quot;</span></span><br><span class="line">      <span class="punctuation">&#125;</span><span class="punctuation">,</span></span><br><span class="line">      <span class="attr">&quot;dest&quot;</span><span class="punctuation">:</span> <span class="string">&quot;/&quot;</span></span><br><span class="line">    <span class="punctuation">&#125;</span></span><br><span class="line">  <span class="punctuation">]</span></span><br><span class="line"><span class="punctuation">&#125;</span></span><br></pre></td></tr></table></figure><p><code>index.py</code> 以跳转到一个网站为例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> flask <span class="keyword">import</span> Flask , request , jsonify, redirect, url_for</span><br><span class="line"><span class="keyword">import</span> requests , json , random</span><br><span class="line">app = Flask(__name__)</span><br><span class="line">app.config[<span class="string">&#x27;JSON_AS_ASCII&#x27;</span>] = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="meta">@app.route(<span class="params"><span class="string">&#x27;/&#x27;</span>,methods=[<span class="string">&quot;GET&quot;</span>]</span>)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">root</span>():</span><br><span class="line">    <span class="keyword">return</span> redirect(<span class="string">&#x27;https://www.acerkaio.top/&#x27;</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>More…</p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;热知识: Vercel 支持后端，可以使用 Flask 语法 （&lt;/p&gt;
&lt;h2 id=&quot;准备工作&quot;&gt;&lt;a href=&quot;#准备工作&quot; class=&quot;headerlink&quot; title=&quot;准备工作:&quot;&gt;&lt;/a&gt;准备工作:&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;Flask&lt;/p&gt;
&lt;</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>扫描线学习笔记</title>
    <link href="https://blog.acerkaio.top/2024/01/14/%E6%89%AB%E6%8F%8F%E7%BA%BF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.acerkaio.top/2024/01/14/%E6%89%AB%E6%8F%8F%E7%BA%BF%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2024-01-14T13:45:03.000Z</published>
    <updated>2024-07-12T09:39:24.227Z</updated>
    
    <content type="html"><![CDATA[<p>待补</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ls root &lt;&lt; 1</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> rs root &lt;&lt; 1 | 1</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> _ = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// rectangle</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Rectangle</span> &#123;</span><br><span class="line">    <span class="type">int</span> x, y1, y2, k;</span><br><span class="line">&#125; R[_ &lt;&lt; <span class="number">1</span>];</span><br><span class="line"><span class="comment">// Segment</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Segment</span> &#123;</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">&#125; T[_ &lt;&lt; <span class="number">4</span>];</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, c[_], raw[_], val[_], Y[_], NoY = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(Rectangle A, Rectangle B)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (A.x == B.x)</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">rand</span>() % <span class="number">2</span>; <span class="comment">//lol</span></span><br><span class="line">    <span class="keyword">return</span> A.x &lt; B.x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Push_Up</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Change</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> val)</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Queue</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> L, <span class="type">int</span> R)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="built_in">srand</span>(<span class="built_in">time</span>(<span class="number">0</span>));</span><br><span class="line">    ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line">        <span class="type">int</span> x1, x2, y1, y2;</span><br><span class="line">        cin &gt;&gt; x1 &gt;&gt; y1 &gt;&gt; x2 &gt;&gt; y2;</span><br><span class="line">        R[i * <span class="number">2</span> - <span class="number">1</span>] = (Rectangle)&#123;x1, y1, y2, <span class="number">1</span>&#125;;</span><br><span class="line">        R[i * <span class="number">2</span>] = (Rectangle)&#123;x2, y1, y2, <span class="number">-1</span>&#125;;</span><br><span class="line">        Y[i * <span class="number">2</span> - <span class="number">1</span>] = y1;</span><br><span class="line">        Y[i * <span class="number">2</span>] = y2;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(R + <span class="number">1</span>, R + <span class="number">2</span> * n + <span class="number">1</span>, cmp);</span><br><span class="line">    <span class="built_in">sort</span>(Y + <span class="number">1</span>, Y + <span class="number">2</span> * n + <span class="number">1</span>);</span><br><span class="line">    <span class="type">int</span> ans = <span class="number">0</span>, NoY = <span class="built_in">unique</span>(Y + <span class="number">1</span>, Y + <span class="number">2</span> * n + <span class="number">1</span>) - Y - <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">2</span> * n <span class="comment">/*最后一边 k 是 -1 不需要统计*/</span>; i++) &#123;</span><br><span class="line">        <span class="comment">// 所有 x 相等的情况只会记入最后一次，即如果 R[i].x == R[i + 1].x 则 R[i + 1].x - R[i].x == 0.</span></span><br><span class="line">        <span class="built_in">Change</span>(<span class="number">1</span>, <span class="number">1</span>, NoY - <span class="number">1</span>, R[i].y1, R[i].y2, R[i].k);</span><br><span class="line">        ans = ans + (T[<span class="number">1</span>].len * (R[i + <span class="number">1</span>].x - R[i].x));</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; ans &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;   </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Push_Up</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (T[root].cnt &gt; <span class="number">0</span>) &#123;</span><br><span class="line">        T[root].len = Y[r + <span class="number">1</span>] - Y[l];</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        T[root].len = T[ls].len + T[rs].len;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// Y 是离散数组，在 Y 内，每个出现的 Y 值都有出现且递增排序。</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Change</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> val)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (Y[r + <span class="number">1</span>] &lt;= L || R &lt;= Y[l]) <span class="keyword">return</span> ;</span><br><span class="line">    <span class="keyword">if</span> (L &lt;= Y[l] &amp;&amp; Y[r + <span class="number">1</span>] &lt;= R) &#123;</span><br><span class="line">        T[root].cnt += val;</span><br><span class="line">        <span class="built_in">Push_Up</span>(root, l, r);</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">Change</span>(ls, l, mid, L, R, val);</span><br><span class="line">    <span class="built_in">Change</span>(rs, mid + <span class="number">1</span>, r, L, R, val);</span><br><span class="line">    <span class="built_in">Push_Up</span>(root, l, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Queue</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> L, <span class="type">int</span> R)</span> </span>&#123;</span><br><span class="line">    <span class="comment">// lol</span></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0ll</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;待补&lt;/p&gt;
&lt;figure class=&quot;highlight cpp&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;sp</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>闲话11.8</title>
    <link href="https://blog.acerkaio.top/2023/11/08/%E9%97%B2%E8%AF%9D11-8/"/>
    <id>https://blog.acerkaio.top/2023/11/08/%E9%97%B2%E8%AF%9D11-8/</id>
    <published>2023-11-08T12:14:14.000Z</published>
    <updated>2024-07-18T09:01:11.874Z</updated>
    
    <content type="html"><![CDATA[<h3 id="有人会看吗？"><a href="#有人会看吗？" class="headerlink" title="有人会看吗？"></a>有人会看吗？</h3><hr><p>我的图片库: <a href="https://pic.acerkaio.top/">pic.acerkaio.top</a></p><hr><p>小说在看《魔女之旅 14卷》</p><hr><p>挂个 <a href="https://www.luogu.com.cn/blog/514850/csp-2023-you-ji">CSP2023游记</a>。</p><hr><h3 id="头图："><a href="#头图：" class="headerlink" title="头图："></a>头图：</h3><p><img src="/404" alt="again"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;有人会看吗？&quot;&gt;&lt;a href=&quot;#有人会看吗？&quot; class=&quot;headerlink&quot; title=&quot;有人会看吗？&quot;&gt;&lt;/a&gt;有人会看吗？&lt;/h3&gt;&lt;hr&gt;
&lt;p&gt;我的图片库: &lt;a href=&quot;https://pic.acerkaio.top/&quot;&gt;pic.ac</summary>
      
    
    
    
    <category term="闲话" scheme="https://blog.acerkaio.top/categories/%E9%97%B2%E8%AF%9D/"/>
    
    
    <category term="闲话" scheme="https://blog.acerkaio.top/tags/%E9%97%B2%E8%AF%9D/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu更换开机动画为Elaina</title>
    <link href="https://blog.acerkaio.top/2023/08/15/Ubuntu%E6%9B%B4%E6%8D%A2%E5%BC%80%E6%9C%BA%E5%8A%A8%E7%94%BB/"/>
    <id>https://blog.acerkaio.top/2023/08/15/Ubuntu%E6%9B%B4%E6%8D%A2%E5%BC%80%E6%9C%BA%E5%8A%A8%E7%94%BB/</id>
    <published>2023-08-15T12:19:53.000Z</published>
    <updated>2023-08-22T11:41:24.124Z</updated>
    
    <content type="html"><![CDATA[<h2 id="开始前"><a href="#开始前" class="headerlink" title="开始前"></a>开始前</h2><p>作者使用 <strong>Ubuntu 22.04.3 LTS</strong>，教程开始前请判断您的 Ubuntu 是否使用 <strong>Plymouth</strong>!</p><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p>作者已经帮您整合好 Elaina 主题，您需要下载其 <a href="https://blog.acerkaio.top/download/Elaina.zip">方式1</a> | <a href="https://vercel.acerkaio.top/download/Elaina.zip">方式2 (可能更快)</a></p><h2 id="更改文件夹权限"><a href="#更改文件夹权限" class="headerlink" title="更改文件夹权限"></a>更改文件夹权限</h2><p>下载后，我们打开 &#x2F;usr&#x2F;share&#x2F;plymouth&#x2F;</p><p>为了方便，我们使用以下命令更改文件夹权限：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo chown -R &lt;你的用户名&gt;:&lt;你的用户名&gt; /usr/share/plymouth/themes/</span><br></pre></td></tr></table></figure><h2 id="具体操作"><a href="#具体操作" class="headerlink" title="具体操作"></a>具体操作</h2><p>打开 themes 文件夹，将下载的 Elaina.zip 解压到这里为 Elaina 文件夹。</p><p>先使用：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install plymouth-theme*</span><br></pre></td></tr></table></figure><p>然后使用</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --install /usr/share/plymouth/themes/default.plymouth default.plymouth /usr/share/plymouth/themes/Elaina/ubuntu-gnome-logo.plymouth 150</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着使用以下命令并找到 Elaina 有关字段，填写编号。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo update-alternatives --config default.plymouth</span><br></pre></td></tr></table></figure><p>最后生效（可能会等久一点）：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">sudo update-initramfs -u</span><br><span class="line">sudo update-grub</span><br><span class="line">reboot</span><br></pre></td></tr></table></figure><p>您也可以将其中的 PNG 文件做适当更改。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;开始前&quot;&gt;&lt;a href=&quot;#开始前&quot; class=&quot;headerlink&quot; title=&quot;开始前&quot;&gt;&lt;/a&gt;开始前&lt;/h2&gt;&lt;p&gt;作者使用 &lt;strong&gt;Ubuntu 22.04.3 LTS&lt;/strong&gt;，教程开始前请判断您的 Ubuntu 是否使用 &lt;s</summary>
      
    
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>KMP学习笔记</title>
    <link href="https://blog.acerkaio.top/2023/03/12/KMP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.acerkaio.top/2023/03/12/KMP%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-03-12T05:40:23.000Z</published>
    <updated>2024-07-18T08:58:49.293Z</updated>
    
    <content type="html"><![CDATA[<h3 id="重新定义水博客"><a href="#重新定义水博客" class="headerlink" title="重新定义水博客"></a>重新定义水博客</h3><p>border[y] &#x3D; x 表示 b[1 ~ x] &#x3D; b[(y - x + 1) ~ y]</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">find_border</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= lb; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (b[i] != b[j + <span class="number">1</span>] &amp;&amp; j) &#123; <span class="comment">//当失配时</span></span><br><span class="line">            j = border[j];</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (b[i] == b[j + <span class="number">1</span>]) &#123; <span class="comment">//可以加入一个 </span></span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        border[i] = j;  <span class="comment">//储存 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">kmp</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= la; i++) &#123;</span><br><span class="line">        <span class="keyword">while</span> (a[i] != b[j + <span class="number">1</span>] &amp;&amp; j) j = border[j]; <span class="comment">//失恋了 </span></span><br><span class="line">        <span class="keyword">if</span> (a[i] == b[j + <span class="number">1</span>]) j++;  <span class="comment">//计入 </span></span><br><span class="line">        <span class="keyword">if</span> (j == lb) cout &lt;&lt; i - j + <span class="number">1</span> &lt;&lt; endl,j = border[j]<span class="comment">//防止j超过lb; //匹配van了 </span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h3 id=&quot;重新定义水博客&quot;&gt;&lt;a href=&quot;#重新定义水博客&quot; class=&quot;headerlink&quot; title=&quot;重新定义水博客&quot;&gt;&lt;/a&gt;重新定义水博客&lt;/h3&gt;&lt;p&gt;border[y] &amp;#x3D; x 表示 b[1 ~ x] &amp;#x3D; b[(y - x + 1</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>国产系统Deepin20初体验</title>
    <link href="https://blog.acerkaio.top/2023/01/25/%E5%9B%BD%E4%BA%A7%E7%B3%BB%E7%BB%9FDeepin20%E5%88%9D%E4%BD%93%E9%AA%8C/"/>
    <id>https://blog.acerkaio.top/2023/01/25/%E5%9B%BD%E4%BA%A7%E7%B3%BB%E7%BB%9FDeepin20%E5%88%9D%E4%BD%93%E9%AA%8C/</id>
    <published>2023-01-25T12:03:04.000Z</published>
    <updated>2024-07-12T09:36:59.199Z</updated>
    
    <content type="html"><![CDATA[<h2 id="ISO-文件下载"><a href="#ISO-文件下载" class="headerlink" title="ISO 文件下载"></a>ISO 文件下载</h2><p>这里给个下载地址哦：<a href="https://www.deepin.org/zh/download/">https://www.deepin.org/zh/download/</a>。</p><h2 id="浅谈一下"><a href="#浅谈一下" class="headerlink" title="浅谈一下"></a>浅谈一下</h2><p>先说优点：</p><ol><li><p>界面简洁，作为图形化操作系统，简洁是一大看点。</p></li><li><p>对于使用者友好，安装引导人性化。</p></li><li><p>免费。</p></li></ol><p>缺点：</p><ol><li><p>感觉界面设计令人失望，大圆角使其显得臃肿。</p></li><li><p>功能不够完善。</p></li><li><p>五子棋机器人太菜了。</p></li></ol><p><img src="https://pic.imgdb.cn/item/63d11eecface21e9ef7e8f66.png" alt="Acerkaio qwq"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>还有一点：我把缩小动画换成什么魔灯然后缩小一个界面就死机了，现在一开机就黑屏。qwq</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;ISO-文件下载&quot;&gt;&lt;a href=&quot;#ISO-文件下载&quot; class=&quot;headerlink&quot; title=&quot;ISO 文件下载&quot;&gt;&lt;/a&gt;ISO 文件下载&lt;/h2&gt;&lt;p&gt;这里给个下载地址哦：&lt;a href=&quot;https://www.deepin.org/zh/d</summary>
      
    
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>树链剖分学习笔记</title>
    <link href="https://blog.acerkaio.top/2023/01/13/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    <id>https://blog.acerkaio.top/2023/01/13/%E6%A0%91%E9%93%BE%E5%89%96%E5%88%86%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/</id>
    <published>2023-01-13T13:52:22.000Z</published>
    <updated>2024-07-12T09:36:44.771Z</updated>
    
    <content type="html"><![CDATA[<h2 id="树链剖分"><a href="#树链剖分" class="headerlink" title="树链剖分"></a>树链剖分</h2><p>树链剖分（树剖&#x2F;链剖）有多种形式，如 重链剖分，长链剖分 和用于 Link&#x2F;cut Tree 的剖分（有时被称作“实链剖分”），大多数情况下（没有特别说明时），“树链剖分”都指“重链剖分”。<br>引自：<a href="https://oi-wiki.org/graph/hld/#%E5%AD%90%E6%A0%91%E7%BB%B4%E6%8A%A4">OI-WIKI</a></p><h3 id="重链剖分"><a href="#重链剖分" class="headerlink" title="重链剖分"></a>重链剖分</h3><h4 id="我们给出一些定义"><a href="#我们给出一些定义" class="headerlink" title="我们给出一些定义"></a>我们给出一些定义</h4><ul><li><p>定义 重子节点 表示其子节点中子树最大的子结点。如果有多个子树最大的子结点，取其一。如果没有子节点，就无重子节点。</p></li><li><p>定义 轻子节点 表示剩余的所有子结点。</p></li><li><p>从这个结点到重子节点的边为 重边。</p></li><li><p>到其他轻子节点的边为 轻边。</p></li><li><p>若干条首尾衔接的重边构成 重链。</p></li></ul><p><img src="https://oi-wiki.org/graph/images/hld.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>简单来说，我们要做的就是把一颗树剖分成一条条链（如图左到图右）</p><p>具体点：我们把落单的结点也当作重链，那么我们要将整棵树就被剖分成若干条重链。</p><h4 id="实现"><a href="#实现" class="headerlink" title="实现"></a>实现</h4><p>分两个 DFS，所需变量：</p><p>fa[] : fa[i] 表示第 i 个节点的父亲节点；<br>Hson[] : Hson[i] 表示第 i 个节点的重儿子节点；<br>Dep[] : Dep[i] 表示第 i 个节点的深度（根节点深度为 1）；<br>Size[] : Size[i] 表示第 i 个节点的子树大小；<br>Top[] : Top[i] 表示第 i 个节点所在的链的顶部节点；<br>seg[] : seg[i] 表示第 i 个节点的 DFS 序；<br>rev[] : 表示 DFS 序所对应的节点编号。</p><p>CODE：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Podfs1</span><span class="params">(<span class="type">int</span> p, <span class="type">int</span> f)</span> </span>&#123;</span><br><span class="line">fa[p] = f;</span><br><span class="line">Dep[p] = Dep[f] + <span class="number">1</span>;</span><br><span class="line">Size[p] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class="line"><span class="type">int</span> v = node[i].y;</span><br><span class="line"><span class="keyword">if</span> (v == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">Podfs1</span>(v, p);</span><br><span class="line">Size[p] += Size[v];</span><br><span class="line"><span class="keyword">if</span> (Size[v] &gt; Size[Hson[p]]) Hson[p] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="type">void</span> <span class="title">Podfs2</span><span class="params">(<span class="type">int</span> p, <span class="type">int</span> top)</span> </span>&#123;</span><br><span class="line">++DFNtot;</span><br><span class="line">Top[p] = top;</span><br><span class="line">seg[p] = DFNtot;</span><br><span class="line">rev[DFNtot] = p;</span><br><span class="line"><span class="keyword">if</span> (Hson[p])</span><br><span class="line"><span class="built_in">Podfs2</span>(Hson[p], top);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class="line"><span class="type">int</span> v = node[i].y;</span><br><span class="line"><span class="keyword">if</span> (v == fa[p]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (Hson[p] != v) <span class="built_in">Podfs2</span>(v, v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>配合线段树与实现 LCA：</p><p><a href="https://www.luogu.com.cn/problem/P3384">P3384 【模板】重链剖分&#x2F;树链剖分</a></p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> _ = <span class="number">1e5</span> + <span class="number">7</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> N, M, P, R, val[_];</span><br><span class="line"><span class="type">int</span> fa[_], Hson[_], Dep[_], Size[_], Top[_], seg[_], rev[_], DFNtot = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> head[_], Tot = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Node</span> &#123;</span><br><span class="line"><span class="type">int</span> y, next;</span><br><span class="line"><span class="built_in">Node</span>() &#123;next = <span class="number">0</span>;&#125;</span><br><span class="line">&#125; node[<span class="number">2</span> * _];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span> </span>&#123;</span><br><span class="line">++Tot;</span><br><span class="line">node[Tot].y = y;</span><br><span class="line">node[Tot].next = head[x];</span><br><span class="line">head[x] = Tot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*--树剖dfs--*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Podfs1</span><span class="params">(<span class="type">int</span> p, <span class="type">int</span> f)</span> </span>&#123;</span><br><span class="line">fa[p] = f;</span><br><span class="line">Dep[p] = Dep[f] + <span class="number">1</span>;</span><br><span class="line">Size[p] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class="line"><span class="type">int</span> v = node[i].y;</span><br><span class="line"><span class="keyword">if</span> (v == f) <span class="keyword">continue</span>;</span><br><span class="line"><span class="built_in">Podfs1</span>(v, p);</span><br><span class="line">Size[p] += Size[v];</span><br><span class="line"><span class="keyword">if</span> (Size[v] &gt; Size[Hson[p]]) Hson[p] = v;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Podfs2</span><span class="params">(<span class="type">int</span> p, <span class="type">int</span> top)</span> </span>&#123;</span><br><span class="line">++DFNtot;</span><br><span class="line">Top[p] = top;</span><br><span class="line">seg[p] = DFNtot;</span><br><span class="line">rev[DFNtot] = p;</span><br><span class="line"><span class="keyword">if</span> (Hson[p])</span><br><span class="line"><span class="built_in">Podfs2</span>(Hson[p], top);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head[p]; i; i = node[i].next) &#123;</span><br><span class="line"><span class="type">int</span> v = node[i].y;</span><br><span class="line"><span class="keyword">if</span> (v == fa[p]) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (Hson[p] != v) <span class="built_in">Podfs2</span>(v, v);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*--线段树--*/</span></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Tree</span> &#123;</span><br><span class="line"><span class="type">int</span> l, r, sum;</span><br><span class="line"><span class="type">int</span> lazy;</span><br><span class="line">&#125; tree[<span class="number">4</span> * _];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lson</span><span class="params">(<span class="type">int</span> root)</span> </span>&#123;<span class="keyword">return</span> root &lt;&lt; <span class="number">1</span>;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rson</span><span class="params">(<span class="type">int</span> root)</span> </span>&#123;<span class="keyword">return</span> root &lt;&lt; <span class="number">1</span> | <span class="number">1</span>;&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Push_Up</span><span class="params">(<span class="type">int</span> root)</span> </span>&#123;</span><br><span class="line">tree[root].sum = (tree[<span class="built_in">lson</span>(root)].sum + tree[<span class="built_in">rson</span>(root)].sum) % P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Push_Down</span><span class="params">(<span class="type">int</span> root)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (tree[root].lazy != <span class="number">0</span>) &#123;</span><br><span class="line"><span class="type">int</span> num = tree[root].lazy;</span><br><span class="line">tree[<span class="built_in">lson</span>(root)].sum = (tree[<span class="built_in">lson</span>(root)].sum + (tree[<span class="built_in">lson</span>(root)].r - tree[<span class="built_in">lson</span>(root)].l + <span class="number">1</span>) * num % P) % P;</span><br><span class="line">tree[<span class="built_in">rson</span>(root)].sum = (tree[<span class="built_in">rson</span>(root)].sum + (tree[<span class="built_in">rson</span>(root)].r - tree[<span class="built_in">rson</span>(root)].l + <span class="number">1</span>) * num % P) % P;</span><br><span class="line">tree[<span class="built_in">lson</span>(root)].lazy = (tree[<span class="built_in">lson</span>(root)].lazy + num) % P;</span><br><span class="line">tree[<span class="built_in">rson</span>(root)].lazy = (tree[<span class="built_in">rson</span>(root)].lazy + num) % P;</span><br><span class="line">tree[root].lazy = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Build</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> root)</span> </span>&#123;</span><br><span class="line">tree[root].l = l;</span><br><span class="line">tree[root].r = r;</span><br><span class="line"><span class="keyword">if</span> (l == r) &#123;</span><br><span class="line">tree[root].sum = val[rev[l]] % P;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="built_in">Build</span>(l, mid, <span class="built_in">lson</span>(root));</span><br><span class="line"><span class="built_in">Build</span>(mid + <span class="number">1</span>, r, <span class="built_in">rson</span>(root));</span><br><span class="line"><span class="built_in">Push_Up</span>(root);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Change</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> L, <span class="type">int</span> R, <span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (L &lt;= l &amp;&amp; r &lt;= R) &#123;</span><br><span class="line">tree[root].sum += (r - l + <span class="number">1</span>) * num % P;</span><br><span class="line">tree[root].sum %= P;</span><br><span class="line">tree[root].lazy += num % P;</span><br><span class="line">tree[root].lazy %= P;</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Push_Down</span>(root);</span><br><span class="line"><span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (L &lt;= mid) </span><br><span class="line"><span class="built_in">Change</span>(<span class="built_in">lson</span>(root), l, mid, L, R, num);</span><br><span class="line"><span class="keyword">if</span> (mid &lt; R)</span><br><span class="line"><span class="built_in">Change</span>(<span class="built_in">rson</span>(root), mid + <span class="number">1</span>, r, L, R, num);</span><br><span class="line"><span class="built_in">Push_Up</span>(root);</span><br><span class="line"><span class="keyword">return</span> ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Query</span><span class="params">(<span class="type">int</span> root, <span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> L, <span class="type">int</span> R)</span> </span>&#123;</span><br><span class="line"><span class="keyword">if</span> (L &gt; r || R &lt; l) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (L &lt;= l &amp;&amp; r &lt;= R) </span><br><span class="line"><span class="keyword">return</span> tree[root].sum % P;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">Push_Down</span>(root);</span><br><span class="line"><span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (L &lt;= mid) &#123;</span><br><span class="line">ans += <span class="built_in">Query</span>(<span class="built_in">lson</span>(root), l, mid, L, R) % P;</span><br><span class="line">ans %= P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mid &lt; R) &#123;</span><br><span class="line">ans += <span class="built_in">Query</span>(<span class="built_in">rson</span>(root), mid + <span class="number">1</span>, r, L, R) % P;</span><br><span class="line">ans %= P;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans % P;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*--LCA--*/</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">TChange</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v, <span class="type">int</span> num)</span> </span>&#123;</span><br><span class="line"><span class="keyword">while</span> (Top[u] != Top[v]) &#123;</span><br><span class="line"><span class="keyword">if</span> (Dep[Top[u]] &gt; Dep[Top[v]]) &#123;</span><br><span class="line"><span class="built_in">Change</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[Top[u]], seg[u], num);</span><br><span class="line">u = fa[Top[u]];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="built_in">Change</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[Top[v]], seg[v], num);</span><br><span class="line">v = fa[Top[v]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Dep[u] &gt; Dep[v]) <span class="built_in">swap</span>(u, v);</span><br><span class="line"><span class="built_in">Change</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[u], seg[v], num);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">TQuery</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v)</span> </span>&#123;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (Top[u] != Top[v]) &#123;</span><br><span class="line"><span class="keyword">if</span> (Dep[Top[u]] &gt; Dep[Top[v]]) &#123;</span><br><span class="line">ans = ans + <span class="built_in">Query</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[Top[u]], seg[u]) % P;</span><br><span class="line">ans %= P;</span><br><span class="line">u = fa[Top[u]];</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">ans = ans + <span class="built_in">Query</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[Top[v]], seg[v]) % P;</span><br><span class="line">ans %= P;</span><br><span class="line">v = fa[Top[v]];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Dep[u] &gt; Dep[v]) <span class="built_in">swap</span>(u, v);</span><br><span class="line">ans = (ans + <span class="built_in">Query</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[u], seg[v]) % P) % P;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; N &gt;&gt; M &gt;&gt; R &gt;&gt; P;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= N; i++) cin &gt;&gt; val[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++) &#123;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="built_in">add</span>(x, y);</span><br><span class="line"><span class="built_in">add</span>(y, x);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Podfs1</span>(R, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">Podfs2</span>(R, R);</span><br><span class="line"></span><br><span class="line"><span class="built_in">Build</span>(<span class="number">1</span>, DFNtot, <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (M--) &#123;</span><br><span class="line"><span class="type">int</span> k;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">1</span>) &#123;</span><br><span class="line"><span class="type">int</span> x, y, z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line"><span class="built_in">TChange</span>(x, y, z);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">2</span>) &#123;</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line">cout &lt;&lt; <span class="built_in">TQuery</span>(x, y) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">3</span>) &#123;</span><br><span class="line"><span class="type">int</span> x, z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; z;</span><br><span class="line"><span class="built_in">Change</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[x], seg[x] + Size[x] - <span class="number">1</span>, z);</span><br><span class="line">&#125; <span class="keyword">else</span> <span class="keyword">if</span> (k == <span class="number">4</span>) &#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">cout &lt;&lt; <span class="built_in">Query</span>(<span class="number">1</span>, <span class="number">1</span>, DFNtot, seg[x], seg[x] + Size[x] - <span class="number">1</span>) &lt;&lt; <span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;树链剖分&quot;&gt;&lt;a href=&quot;#树链剖分&quot; class=&quot;headerlink&quot; title=&quot;树链剖分&quot;&gt;&lt;/a&gt;树链剖分&lt;/h2&gt;&lt;p&gt;树链剖分（树剖&amp;#x2F;链剖）有多种形式，如 重链剖分，长链剖分 和用于 Link&amp;#x2F;cut Tree 的剖分（有</summary>
      
    
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/categories/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
    
    <category term="学习笔记" scheme="https://blog.acerkaio.top/tags/%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>PHP环境</title>
    <link href="https://blog.acerkaio.top/2022/12/23/PHP%E7%8E%AF%E5%A2%83/"/>
    <id>https://blog.acerkaio.top/2022/12/23/PHP%E7%8E%AF%E5%A2%83/</id>
    <published>2022-12-23T09:56:46.000Z</published>
    <updated>2024-07-18T08:58:15.350Z</updated>
    
    <content type="html"><![CDATA[<h2 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h2><p>ε&#x3D;(´ο｀*)))唉，为了以后不掉坑，现在做个笔记。</p><h2 id="1-PHP安装"><a href="#1-PHP安装" class="headerlink" title="1. PHP安装"></a>1. PHP安装</h2><h3 id="1-下载-PHP"><a href="#1-下载-PHP" class="headerlink" title="1. 下载 PHP"></a>1. 下载 PHP</h3><p>我的下载：VS16 x64 Non Thread Safe (2022-Dec-06 15:55:22)</p><p>官方下载地址：<a href="https://windows.php.net/download/">https://windows.php.n...</a></p><h3 id="2-修改文件"><a href="#2-修改文件" class="headerlink" title="2. 修改文件"></a>2. 修改文件</h3><p>进入目录，拷贝php.ini-production一份命名为php.ini作为php配置文件</p><h3 id="3-配置php-in"><a href="#3-配置php-in" class="headerlink" title="3. 配置php.in"></a>3. 配置php.in</h3><h4 id="设置扩展文件路径，找到extension-dir，去掉前面分号并配置扩展库目录，如："><a href="#设置扩展文件路径，找到extension-dir，去掉前面分号并配置扩展库目录，如：" class="headerlink" title="设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如："></a>设置扩展文件路径，找到extension_dir，去掉前面分号并配置扩展库目录，如：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">extension_dir = &quot;E:\php\env\php-8.0.3\ext&quot;</span><br></pre></td></tr></table></figure><h4 id="根据需求打开gd、mysqli、pdo-mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension-gd2"><a href="#根据需求打开gd、mysqli、pdo-mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension-gd2" class="headerlink" title="根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension&#x3D;gd2"></a>根据需求打开gd、mysqli、pdo_mysql、mbstring、curl等常用扩展使用，去掉前面分号即可，如：extension&#x3D;gd2</h4><h4 id="设置时区为中国地区，date-timezone-PRC"><a href="#设置时区为中国地区，date-timezone-PRC" class="headerlink" title="设置时区为中国地区，date.timezone &#x3D;PRC"></a>设置时区为中国地区，date.timezone &#x3D;PRC</h4><h4 id="设置支持短标签写法，short-open-tag-Off改为short-open-tag-On"><a href="#设置支持短标签写法，short-open-tag-Off改为short-open-tag-On" class="headerlink" title="设置支持短标签写法，short_open_tag &#x3D; Off改为short_open_tag &#x3D; On"></a>设置支持短标签写法，short_open_tag &#x3D; Off改为short_open_tag &#x3D; On</h4><h4 id="开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号-开启）如下："><a href="#开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号-开启）如下：" class="headerlink" title="开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下："></a>开启cgi，以支持nginx与php通信（apache则采用模块化与php通信），分别找到以下关键词进行配置（去掉前面分号;开启）如下：</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cgi.force_redirect = 1</span><br><span class="line">cgi.fix_pathinfo=1</span><br><span class="line">cgi.rfc2616_headers = 0</span><br></pre></td></tr></table></figure><h4 id="配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录"><a href="#配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录" class="headerlink" title="配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录"></a>配置session存储目录，为了安全尽可能设置为外网访问不到的服务器目录</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">session.save_path = &quot;C:/WINDOWS/Temp&quot;</span><br></pre></td></tr></table></figure><p>然后把这整个文件夹添加到系统变量即可<br>PHP -v 可查看版本号</p><p>说明：执行php命令若报错：PHP Warning: ‘C:\Windows\SYSTEM32\VCRUNTIME140.dll’ 14.14 is not compatible……需要Visual Studio 2015、2017 和 2019支持，根据实际情况下载安装。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;0-前言&quot;&gt;&lt;a href=&quot;#0-前言&quot; class=&quot;headerlink&quot; title=&quot;0. 前言&quot;&gt;&lt;/a&gt;0. 前言&lt;/h2&gt;&lt;p&gt;ε&amp;#x3D;(´ο｀*)))唉，为了以后不掉坑，现在做个笔记。&lt;/p&gt;
&lt;h2 id=&quot;1-PHP安装&quot;&gt;&lt;a hre</summary>
      
    
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>CSP-2022</title>
    <link href="https://blog.acerkaio.top/2022/11/06/CSP-2022/"/>
    <id>https://blog.acerkaio.top/2022/11/06/CSP-2022/</id>
    <published>2022-11-06T04:12:29.000Z</published>
    <updated>2024-07-12T09:36:54.591Z</updated>
    
    <content type="html"><![CDATA[<p>Boom!!!</p><p>比赛“降智”。</p><h3 id="J组"><a href="#J组" class="headerlink" title="J组"></a>J组</h3><p>T4大水题我竟然看都不看就写部分分QAQ。</p><p>T2也是炸了，推到一个地方就暴力去解QAQ，看了一下用完全平方公式就可以解（我废了。</p><p>（T3不会</p><h3 id="S组"><a href="#S组" class="headerlink" title="S组"></a>S组</h3><p>T1 至今不会</p><p>T2 考场上机子被宇宙射线社坏了，在那份代码里，我如果是手动输入就可以正常运行，但如果是粘贴就显示段错误QAQ我怎么荔枝。</p><p>T2 本来就想 10-20 分钟骗个部分分，最后竟花了1小时，部分分还没骗到。</p><h1 id="QAQ"><a href="#QAQ" class="headerlink" title="QAQ"></a>QAQ</h1>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;Boom!!!&lt;/p&gt;
&lt;p&gt;比赛“降智”。&lt;/p&gt;
&lt;h3 id=&quot;J组&quot;&gt;&lt;a href=&quot;#J组&quot; class=&quot;headerlink&quot; title=&quot;J组&quot;&gt;&lt;/a&gt;J组&lt;/h3&gt;&lt;p&gt;T4大水题我竟然看都不看就写部分分QAQ。&lt;/p&gt;
&lt;p&gt;T2也是炸了，推到一个</summary>
      
    
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/categories/%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="记录" scheme="https://blog.acerkaio.top/tags/%E8%AE%B0%E5%BD%95/"/>
    
  </entry>
  
  <entry>
    <title>CF1730A/B题解</title>
    <link href="https://blog.acerkaio.top/2022/10/01/CF1730B%E9%A2%98%E8%A7%A3/"/>
    <id>https://blog.acerkaio.top/2022/10/01/CF1730B%E9%A2%98%E8%A7%A3/</id>
    <published>2022-10-01T08:20:12.000Z</published>
    <updated>2024-07-12T09:38:48.279Z</updated>
    
    <content type="html"><![CDATA[<h2 id="TJ-时间"><a href="#TJ-时间" class="headerlink" title="TJ 时间"></a>TJ 时间</h2><h3 id="A-题："><a href="#A-题：" class="headerlink" title="A 题："></a>A 题：</h3><p>太水了，解法各种各样，真的没必要将（真的！</p><p>看看<a href="https://www.scorpio532992.ltd/2022/09/30/Codeforces-Round823(Div.%202)%5BA.Planets%5D/">隔壁的TJ</a>吧（真的没必要讲，纯模拟。</p><p>关于隔壁为啥还没有 B 题TJ（DDDD</p><h3 id="B-题："><a href="#B-题：" class="headerlink" title="B 题："></a>B 题：</h3><h4 id="题意："><a href="#题意：" class="headerlink" title="题意："></a>题意：</h4><p>坐标轴 n 个点，每个点的坐标是 xi (凑合着看吧，我还不会ktext），然而每个点都有一个前提时间 ti，我们需要寻找一个点 x0，使得 所有的 |xi - x0| + ti 中最大的最小。（千万不要理解成加起来最小啊，我就是掉了这个坑！</p><p>那天晚上，想了大约有 15-25 分钟，终于想出这么二分了（题目标签就是二分</p><p>智慧之神 said：二分出一个点。</p><p>我不知道可不可行，但我对此毫无想法（大几率是不可行的</p><p>应该是二分时间。</p><p>思路：<a href="https://www.luogu.com.cn/discuss/501749">Link</a></p><p>看不懂对吧，但是伟大的 <a href="https://www.luogu.com.cn/user/186045">czx</a> 却看懂了。</p><p>详细讲一下吧QAQ</p><p>我们二分的是时间啊，和一些二分题目不同，大部分二分查找题目都是直接二分答案的。</p><p>那么对于第 i 个点</p><p><img src="https://pic1.imgdb.cn/item/633839a316f2c2beb1f4b15b.png" alt="zzb"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>那么距离 xi 长为 mid - ti(mid &gt; ti) 的距离之内的范围所有的点是不是都可以作为 x0 啊（只考虑只有这一点的情况）。</p><p><img src="https://pic1.imgdb.cn/item/63383b0616f2c2beb1f7142b.png" alt="zzb"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>然鹅，有多个点呢？</p><p><img src="https://pic1.imgdb.cn/item/63383b9216f2c2beb1f7ae66.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>很明显，就是区间重叠部分，所以<del>我们来个递归，枚举每一个点，找到重叠部分</del>。</p><p>这时，我们就会收到来自 czx 的嘲讽</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？@Acerkaio 你学过解不等式组吗？</span><br></pre></td></tr></table></figure><p>然后就会收到来自 czx 的温馨提示：左端点全部取max，右端点全部取min，最后 L&lt;&#x3D;R 即为有解</p><h3 id="CODE："><a href="#CODE：" class="headerlink" title="CODE："></a>CODE：</h3><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> int long long</span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100001</span>], t[<span class="number">100001</span>];</span><br><span class="line"><span class="type">int</span> al, ar, n;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> time)</span> </span>&#123;</span><br><span class="line">al = <span class="number">-1</span>, ar = <span class="number">1e9</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) &#123;</span><br><span class="line"><span class="keyword">if</span> (time - t[i] &lt; <span class="number">0</span>)</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">al = <span class="built_in">max</span>(al, a[i] - (time - t[i]));</span><br><span class="line">ar = <span class="built_in">min</span>(ar, a[i] + (time - t[i]));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> al &lt;= ar;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">signed</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="number">0</span>);</span><br><span class="line">cin.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">cout.<span class="built_in">tie</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="type">int</span> T;</span><br><span class="line">    cin &gt;&gt; T;</span><br><span class="line">    <span class="keyword">while</span> (T--) &#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; t[i];</span><br><span class="line">    <span class="type">double</span> l = <span class="number">0</span>, r = <span class="number">1e9</span>;</span><br><span class="line">    <span class="type">double</span> ans;</span><br><span class="line">    <span class="keyword">while</span> (l &lt;= r &amp;&amp; r - l &gt; <span class="number">0.0000001</span>) &#123;</span><br><span class="line">    <span class="type">double</span> mid = (l + r) / <span class="number">2.0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="built_in">check</span>(mid)) &#123;</span><br><span class="line">    ans = (al + ar) / <span class="number">2.0</span>;</span><br><span class="line">    r = mid - <span class="number">1</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.6lf\n&quot;</span>, ans);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>Special Thanks: CZX</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;TJ-时间&quot;&gt;&lt;a href=&quot;#TJ-时间&quot; class=&quot;headerlink&quot; title=&quot;TJ 时间&quot;&gt;&lt;/a&gt;TJ 时间&lt;/h2&gt;&lt;h3 id=&quot;A-题：&quot;&gt;&lt;a href=&quot;#A-题：&quot; class=&quot;headerlink&quot; title=&quot;A 题：&quot;</summary>
      
    
    
    
    <category term="题解" scheme="https://blog.acerkaio.top/categories/%E9%A2%98%E8%A7%A3/"/>
    
    
    <category term="题解" scheme="https://blog.acerkaio.top/tags/%E9%A2%98%E8%A7%A3/"/>
    
  </entry>
  
  <entry>
    <title>关于Simple-Luogu</title>
    <link href="https://blog.acerkaio.top/2022/08/30/%E5%85%B3%E4%BA%8ESimple-Luogu/"/>
    <id>https://blog.acerkaio.top/2022/08/30/%E5%85%B3%E4%BA%8ESimple-Luogu/</id>
    <published>2022-08-30T10:18:49.000Z</published>
    <updated>2024-07-12T09:36:36.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。"><a href="#没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。" class="headerlink" title="没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。"></a>没错，一款崭新的洛谷样式，是我在开发 Smart-Luogu 后积累了许多经验后继而开发的简洁小清新样式。</h2><h2 id="整体外观十分清爽，不少处也有意想不到的动画、效果。"><a href="#整体外观十分清爽，不少处也有意想不到的动画、效果。" class="headerlink" title="整体外观十分清爽，不少处也有意想不到的动画、效果。"></a>整体外观十分清爽，不少处也有意想不到的动画、效果。</h2><h3 id="来体验一下吧："><a href="#来体验一下吧：" class="headerlink" title="来体验一下吧："></a>来体验一下吧：</h3><p><img src="https://pic.imgdb.cn/item/630df8b816f2c2beb115a012.png"  data-tag='post-image' loading="lazy" onerror='this.onerror=null;this.src="/img/404.jpg"'></p><p>目前还没有官网，来 <a href="https://userstyles.world/style/6062/simple-luogu-smart-luogu">Link</a>。</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。&quot;&gt;&lt;a href=&quot;#没错，一款崭新的洛谷样式，是我在开发-Smart-Luogu-后积累了许多经验后继而开发的简洁小清新样式。&quot; class=&quot;heade</summary>
      
    
    
    
    <category term="创作" scheme="https://blog.acerkaio.top/categories/%E5%88%9B%E4%BD%9C/"/>
    
    
    <category term="创作" scheme="https://blog.acerkaio.top/tags/%E5%88%9B%E4%BD%9C/"/>
    
  </entry>
  
  <entry>
    <title>Hello World</title>
    <link href="https://blog.acerkaio.top/2022/08/30/hello-world/"/>
    <id>https://blog.acerkaio.top/2022/08/30/hello-world/</id>
    <published>2022-08-29T16:00:00.000Z</published>
    <updated>2024-07-13T02:27:16.352Z</updated>
    
    <content type="html"><![CDATA[<p>HEXO 博客今天终于搭建好了，采用了 hexo-theme-async 。</p><p>本博客将不采用评论，如需联系，请点击 CONTACT ME。 </p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;HEXO 博客今天终于搭建好了，采用了 hexo-theme-async 。&lt;/p&gt;
&lt;p&gt;本博客将不采用评论，如需联系，请点击 CONTACT ME。 &lt;/p&gt;
</summary>
      
    
    
    
    
  </entry>
  
</feed>
